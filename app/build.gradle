apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-parcelize'

android {
    compileSdk = 34
    buildToolsVersion "34.0.0"
    repositories {
        google()
        mavenCentral()
    }
    defaultConfig {
        applicationId "ir.miare.androidcodechallenge"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }
    viewBinding {
        enabled = true
    }
    buildFeatures {
        compose true
    }
    namespace 'ir.miare.androidcodechallenge'
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.9'
    }

}

dependencies {
    def mockFit_version = "1.1.0"
    def robolectric_version = '4.3'
    def jackson_version = '2.13.0'
    implementation "com.github.javaherisaber.MockFit:runtime:$mockFit_version"
    kapt "com.github.javaherisaber.MockFit:compiler:$mockFit_version"
    ////

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'io.insert-koin:koin-android:3.0.1'
    // implementation 'org.koin:koin-android-viewmodel:2.0.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation 'androidx.preference:preference-ktx:1.1.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation 'androidx.navigation:navigation-compose:2.8.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.0"


    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core-ktx:1.12.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.22"

    // implementation "org.jetbrains.kotlin:kotlin-stdlib:1.7.20"
    def composeBom = platform('androidx.compose:compose-bom:2024.09.03')
    implementation composeBom
    androidTestImplementation composeBom
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "org.robolectric:shadows-multidex:$robolectric_version"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Choose one of the following:
    // Material Design 3
    implementation 'androidx.compose.material3:material3'
    // or Material Design 2
    implementation 'androidx.compose.material:material'
    // or skip Material Design and build directly on top of foundational components
    implementation 'androidx.compose.foundation:foundation'
    // or only import the main APIs for the underlying toolkit systems,
    // such as input and measurement/layout
    implementation 'androidx.compose.ui:ui'

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    implementation 'androidx.compose.material:material-icons-core'
    // Optional - Add full set of material icons
    implementation 'androidx.compose.material:material-icons-extended'
    // Optional - Add window size utils
//    implementation 'androidx.compose.material3.adaptive:adaptive'

    // Optional - Integration with activities
    implementation 'androidx.activity:activity-compose:1.9.2'
    // Optional - Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.8.5'
    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata'

    //koin
    implementation "io.insert-koin:koin-android:3.1.2"
    implementation "io.insert-koin:koin-test:3.1.2"
    implementation "io.insert-koin:koin-androidx-compose:3.1.2"
//
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0"

// Retrofit and converter for Kotlin serialization
    implementation("com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0")


}
